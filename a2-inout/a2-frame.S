# *********************************************************************************
# * Program name: inout                                                           *
# * Description :                                                                 *
# *********************************************************************************

#ifndef MACOS
.ifndef CODEGRADE
    .global main
    main: jmp my_main
.endif
#else
    .global _main
    _main: jmp my_main
    printf: jmp _printf
    scanf: jmp _scanf
    exit: jmp _exit
#endif

.text
# your strings here

.global my_main                         # make my_main accessible globally
.global my_increment                    # make my_increment accessible globally

my_main:
        # set up the stack frame
        pushq   %rbp                # store the caller's base pointer
        movq    %rsp, %rbp          # initialize the base pointer

        call    inout                

        # clear the stack and return

        movq %rbp, %rsp
        popq %rbp

        movq $60, %rax
        movq $0, %rdi
        syscall

inout:
        # read input and increment it using my_increment

        call    my_increment

        # output incremented number

        ret

my_increment:
        # IMPLEMENT ME

        ret
